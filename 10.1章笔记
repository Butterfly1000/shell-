这一部分属于个人笔记，供自己学习，关于shell，阅读《鸟哥的LINUX私房菜》，有趣的朋友可以阅读。

★硬件、内核与Shell
硬件:可以理解成物理实体吧，比如硬盘，声卡。
内核：操作系统的内核，作用就是管理整个计算机的硬件。
Shell:可以理解为用户输入命令与内核之间的沟通者。

举个例子吧：
(我们)输入命令->shell(接收并与内核沟通)->内核（调用硬件）->硬件（执行）;

但实际上呢，下面的步骤更完善：

(我们)输入命令->shell(接收并调用应用程序)->应用程序(与内核沟通或者说调用，例：man、chmod等)->内核（调用硬件）->硬件（执行）;

操作系统（组软件）:1.控制整个硬件  2.管理系统的活动监测

小知识：应用程序其实是在的最外层（应用程序、系统调用、内核、硬件），像鸡蛋壳一样，所以shell被称为壳程序（shell）。只要能够操作应用程序的软件都能够称为
壳程序。

★为什么学习Shell？
1.通用（对应各家Linux发行版）
2.远程管理:命令行模式就是比较快
3.更好的管理主机

★系统的合法shell：可以查看/etc/shells文件，某些服务会通过该文件检查用户可用的shells，所以相应的，系统上合法的shell要写入该文件。

其实shell也是有多个种类的，目前掌握bash即可。那么如何知道每次登陆使用的shell?
答：登陆取得的shell记录就在/etc/passwd

★Bash shell的功能
1.历史命令
记录位置:~/.bash_history
注意：只有成功注销系统后，该命令才会记录到.bash_history,本次登陆未注销时的命令都是缓存在内存中。

2.命令与文件补全功能:Tab键
a.一串命令的第一个字后面，命令补全。 例如:man mamdb 输入mand然后点击tab键，直接补全成mandb。
b.补全文件名。
c.输入一个命令后双击Tab键，可以看到包含该命令名的其他命令。

3.命令别名设置功能:alias
这个确实很方便，类似于快捷键的感觉。

举例：ls -al 查看目录下所有文件击文件夹情况，如果觉得太长，只想输入lm代替。
alias lm='ls -al'
这样就可以了。针对长命令及多语言版命令很好用。

4.任务管理、前台、后台控制
不解释，其他章节有详细介绍

5.程序化脚本:shell scripts

6.通配符
例如：*，这些bash也是支持的。

★查询命令是否为Bash shell的内置命令type
选择
-t 显示意义：file为外部命令，alias为命令别名所设置名称,builtin为bash内置的命令功能
-p 针对外部命令显示完整文件名。
-a 含有name命令全部列出

注：type主要在找出执行文件而不是一般文件名。（类似which）

★命令的执行与快速编按钮
反斜杠(\) 第二行续写命令（斜杆+回车，跳到第二行）

ctrl+u\crtl+k 从光标向前删除/从光标向后删除

ctrl+a\ctrl+e 移动光标，最前/最末




